//
// GroupBlast.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct GroupBlast: Codable {
    public var content: String?
    public var dateBlastAdded: String?
    public var userId: String?

    public init(content: String? = nil, dateBlastAdded: String? = nil, userId: String? = nil) {
        self.content = content
        self.dateBlastAdded = dateBlastAdded
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case content = "_content"
        case dateBlastAdded = "date_blast_added"
        case userId = "user_id"
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        content = try container.decodeIfPresent(String.self, forKey: .content)
        dateBlastAdded = try container.decodeIfPresent(String.self, forKey: .dateBlastAdded)
        userId = try container.decodeIfPresent(String.self, forKey: .userId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(dateBlastAdded, forKey: .dateBlastAdded)
        try container.encodeIfPresent(userId, forKey: .userId)
    }
}
