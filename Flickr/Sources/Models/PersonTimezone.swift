//
// PersonTimezone.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct PersonTimezone: Codable {
    public var label: String?
    public var offset: String?
    public var timezoneId: String?

    public init(label: String? = nil, offset: String? = nil, timezoneId: String? = nil) {
        self.label = label
        self.offset = offset
        self.timezoneId = timezoneId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case label
        case offset
        case timezoneId = "timezone_id"
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        label = try container.decodeIfPresent(String.self, forKey: .label)
        offset = try container.decodeIfPresent(String.self, forKey: .offset)
        timezoneId = try container.decodeIfPresent(String.self, forKey: .timezoneId)
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(label, forKey: .label)
        try container.encodeIfPresent(offset, forKey: .offset)
        try container.encodeIfPresent(timezoneId, forKey: .timezoneId)
    }
}
